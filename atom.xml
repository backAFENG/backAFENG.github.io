<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Mapleaf's 博客]]></title>
  <subtitle><![CDATA[人生不是演戏，自己精彩就好]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://backafeng.github.io/"/>
  <updated>2014-12-05T08:39:18.905Z</updated>
  <id>http://backafeng.github.io/</id>
  
  <author>
    <name><![CDATA[Mapleaf]]></name>
    <email><![CDATA[shaofengleaf@qq.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Xcode 6生成ipa文件]]></title>
    <link href="http://backafeng.github.io/2014/12/05/Xcode-6%E7%94%9F%E6%88%90ipa%E6%96%87%E4%BB%B6/"/>
    <id>http://backafeng.github.io/2014/12/05/Xcode-6生成ipa文件/</id>
    <published>2014-12-05T04:26:27.000Z</published>
    <updated>2014-12-05T08:36:09.000Z</updated>
    <content type="html"><![CDATA[<h4 id="随着Xcode6-1的普遍应用，随之而来的很多问题就会出现，这里来说一下如何在Xcode6-1上生成Ad-hoc_ipa。首先是要在你的开发者账号上生成一个。ipa的主要应用就是在你发布到AppStore之前，客户用来测试的。">随着Xcode6.1的普遍应用，随之而来的很多问题就会出现，这里来说一下如何在Xcode6.1上生成Ad-hoc ipa。首先是要在你的开发者账号上生成一个。ipa的主要应用就是在你发布到AppStore之前，客户用来测试的。</h4>
<p>   好了，现在我们来说一下怎样在Xcode6.1下生成ipa文件。在这里，关于证书的配置，设备的添加就不在啰嗦的赘述了，直接从Ad-hoc profile生成开始。PS：如果你没有证书，请飞过。   </p>
<ul>
<li><p>首先，要在开发者中心进行Ad-hoc profile的配置和生成。并下载下来。<br>  <img src="file:///Users/wangshaofeng/Desktop/Ad-hoc%20profile/adhoc1.png" alt="adhoc1"><br>按照上图的指引完成后，点击continue。   </p>
</li>
<li><p>第二步：然后选择Ad-Hoc，也就是生成profile的类型。<br>  <img src="file:///Users/wangshaofeng/Desktop/Ad-hoc%20profile/adhoc2.png" alt="adhoc2"><br>  选择Ad-Hoc之后点击continue。</p>
</li>
<li><p>第三步：之后来配置App ID；<br>  <img src="file:///Users/wangshaofeng/Desktop/Ad-hoc%20profile/adhoc3.png" alt="adhoc3"><br>  在选择了App ID之后点击continue继续下一步。</p>
</li>
<li><p>第四步：添加发布应用者账号。<br>  <img src="file:///Users/wangshaofeng/Desktop/Ad-hoc%20profile/adhoc4.png" alt="adhoc4"></p>
<p>  选择了发布者账号之后点击continue继续下一步。</p>
</li>
<li><p>第五步：选择可以安装这个ipa文件的设备。（这里的设备都是你之前添加过UUID的设备）<br>  <img src="file:///Users/wangshaofeng/Desktop/Ad-hoc%20profile/adhoc5.png" alt="adhoc5"></p>
<p>  完成之后点击continue继续下一步。</p>
</li>
<li><p>第六步：给你的Ad-Hoc profile文件添加名称。<br>  <img src="file:///Users/wangshaofeng/Desktop/Ad-hoc%20profile/adhoc6.png" alt="adhoc6"></p>
<p>  填写名称之后，点击Generate生成profile文件。</p>
</li>
<li><p>第七步：下载这个profile文件到本地。<br>  <img src="file:///Users/wangshaofeng/Desktop/Ad-hoc%20profile/adhoc7.png" alt="adhoc7"></p>
<p>  至此，Ad-Hoc Profile 文件的配置就已经完成。   </p>
<p>  打开应用程序，双击Ad-Hoc Profile文件，就将该文件添加到了该应用中。然后点击file— &gt;show in Finder ,然后将上面生成的Profile文件复制到该文件夹下面。如图：<br>  <img src="file:///Users/wangshaofeng/Desktop/Ad-hoc%20profile/pz1.png" alt="pz1"></p>
</li>
</ul>
<h4 id="下面我们就来说一下如何将程序进行成功的配置。">下面我们就来说一下如何将程序进行成功的配置。</h4>
<ul>
<li><p>1.点击Project，然后点击右侧的target（如本图的SFDownListAnimation）选择成project，然后点击info，在info下面configuration下添加一项，选择Duplicate “release” Configuration；然后添加命名。过程如图：</p>
<p>  图一：<br>   <img src="file:///Users/wangshaofeng/Desktop/Ad-hoc%20profile/Xcodepz1.png" alt="Xcodepz1"></p>
</li>
</ul>
<pre><code>图二：
![<span class="link_label">Xcodepz2</span>](<span class="link_url">file:///Users/wangshaofeng/Desktop/Ad-hoc%20profile/Xcodepz2.png</span>)


图三：
![<span class="link_label">Xcodepz3</span>](<span class="link_url">file:///Users/wangshaofeng/Desktop/Ad-hoc%20profile/Xcodepz3.png</span>)


图四：Project -&gt;info选项配置结束后如下图。
![<span class="link_label">Xcodepz4</span>](<span class="link_url">file:///Users/wangshaofeng/Desktop/Ad-hoc%20profile/Xcodepz4.png</span>)
</code></pre><ul>
<li><p>2.当Project -&gt;info 配置结束后，选择的过程是：将Project改成Target，然后Target — &gt;build Setting —&gt;Code Signing,进行数据的配置。记住，不要去更改Debug和Release的配置。只要将ad-hoc Profile进行配置就行了。如图所示：<br>  <img src="file:///Users/wangshaofeng/Desktop/Ad-hoc%20profile/Xcodepz5.png" alt="Xcodepz5"></p>
</li>
<li><p>3.打开info-plist文件（注意：这里容易出错,错误就是没有看清楚而打开的时test info-plist文件），这里一定是info-plist文件，而不是test info-plist文件。将plist文件中得 Application requires iPhone environment 项设置为YES，如果没有就添加这一项，并设置为YES。如图：<br>  <img src="file:///Users/wangshaofeng/Desktop/Ad-hoc%20profile/pz2.png" alt="pz2"></p>
</li>
<li><p>4.点击Product— &gt;Scheme—&gt;Edit Scheme ，进去之后在左边栏选择Archive，然后将Build Configuration 设置为你添加的Profile（在这里是ad-hoc Profile），然后点击close。<br>  <img src="file:///Users/wangshaofeng/Desktop/Ad-hoc%20profile/pz3.png" alt="pz3"></p>
</li>
</ul>
<ul>
<li>5.将target选择为Device，如果不是选择Device，在Product中Archive是不能够点击的，设置如图：<br>  <img src="file:///Users/wangshaofeng/Desktop/Ad-hoc%20profile/pz4.png" alt="pz4"></li>
</ul>
<ul>
<li>6.点击Product— &gt;Archive,如果成功则会弹出Organizer—Archives界面，选择Export。如图：<br>  <img src="file:///Users/wangshaofeng/Desktop/Ad-hoc%20profile/pz5.png" alt="pz5"></li>
</ul>
<ul>
<li>7.弹出界面后，选择Save for Ad Hoc Deployment,点击next。<br>  <img src="file:///Users/wangshaofeng/Desktop/Ad-hoc%20profile/pz6.png" alt="pz6"></li>
</ul>
<ul>
<li>8.选择开发团队账号，点击choose。<br>  <img src="file:///Users/wangshaofeng/Desktop/Ad-hoc%20profile/pz7.png" alt="pz7"></li>
</ul>
<ul>
<li>9.核对相关的发布信息，点击Export，生成ipa文件。<br>  <img src="file:///Users/wangshaofeng/Desktop/Ad-hoc%20profile/pz8.png" alt="pz8"></li>
</ul>
<ul>
<li><p>10.为应用程序ipa文件选择位置和对ipa文件进行命名，这样就完成了利用Ad-hoc 生成ipa文件了。</p>
</li>
<li><p>11.然后双击ipa文件加入iTunes，就可以通过iTunes来安装应用程序了。而上一步生成的ipa文件就可以发给客户，即使客户没有Mac，只有windows电脑只需要双击该ipa文件即可将该应用程序加入到iTunes中，然后点击应用程序—&gt;安装—&gt;同步即可将该应用程序安装到iPhone上。</p>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="随着Xcode6-1的普遍应用，随之而来的很多问题就会出现，这里来说一下如何在Xcode6-1上生成Ad-hoc_ipa。首先是要在你的开发者账号上生成一个。ipa的主要应用就是在你发布到AppStore之前，客户用来测试的。">随着Xcode6.1的普遍应用，随]]>
    </summary>
    
      <category term="Ad-hoc,iOS ad hoc生成ipa，ipa,Xcode ipa" scheme="http://backafeng.github.io/tags/Ad-hoc-iOS-ad-hoc%E7%94%9F%E6%88%90ipa%EF%BC%8Cipa-Xcode-ipa/"/>
    
      <category term="iOS" scheme="http://backafeng.github.io/categories/iOS/"/>
    
  </entry>
  
</feed>
